/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.moilioncircle.r056;


import com.alee.laf.WebLookAndFeel;
import com.moilioncircle.r056.serialport.WeigherSdk;

import javax.print.DocFlavor;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

/**
 * @author trydofor
 */
public class HardwareDialog extends JDialog {


    /**
     * Creates new form NewJDialog
     */
    public HardwareDialog() {
        initComponents();
        initPrinters();
        initLabelPage();
        initWeigherPort();
        initWeigherButton(true);
        initCameraButton(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManage = new JLabel();
        cmbPrinterManage = new JComboBox<>();
        btnPrintManage = new JButton();
        lblExpress = new JLabel();
        cmbWeigher = new JComboBox<>();
        btnPrintExpress = new JButton();
        cmbPaperExpress = new JComboBox<>();
        cmbPaperManage = new JComboBox<>();
        lblCarema = new JLabel();
        txtPicture = new JTextField();
        btnCaremaOpen = new JButton();
        btnCaremaClose = new JButton();
        btnWeigh = new JButton();
        lblPictureReview = new JLabel();
        lblWeigher = new JLabel();
        cmbPrinterExpress = new JComboBox<>();
        btnWeigherOpen = new JButton();
        btnWeigherClose = new JButton();
        btnSnap = new JButton();
        jScrollPane1 = new JScrollPane();
        tatInfo = new JTextArea();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        lblManage.setText("管理单打印机 / Dymo / 4x2¼ in");

        cmbPrinterManage.setModel(new DefaultComboBoxModel<>(new String[]{}));

        btnPrintManage.setText("打印管理单");
        btnPrintManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintManageActionPerformed(evt);
            }
        });

        lblExpress.setText("物流单打印机 / Zebra / 4x6 , 4x8 in");

        cmbWeigher.setModel(new DefaultComboBoxModel<>(new String[]{}));

        btnPrintExpress.setText("打印物流单");
        btnPrintExpress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintExpressActionPerformed(evt);
            }
        });

        cmbPaperExpress.setModel(new DefaultComboBoxModel<>(new String[]{}));

        cmbPaperManage.setModel(new DefaultComboBoxModel<>(new String[]{}));

        lblCarema.setText("拍照摄像头 / MER-500-14GCGM");

        txtPicture.setText("保存路径");

        btnCaremaOpen.setText("启动");
        btnCaremaOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaremaOpenActionPerformed(evt);
            }
        });

        btnCaremaClose.setText("关闭");
        btnCaremaClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaremaCloseActionPerformed(evt);
            }
        });

        btnWeigh.setText("称重");
        btnWeigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeighActionPerformed(evt);
            }
        });

        lblPictureReview.setText("");
        lblPictureReview.setBorder(BorderFactory.createLineBorder(new Color(2, 140, 255)));

        lblWeigher.setText("串口称 / COM1 / COM3");

        cmbPrinterExpress.setModel(new DefaultComboBoxModel<>(new String[]{}));

        btnWeigherOpen.setText("启动");
        btnWeigherOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeigherOpenActionPerformed(evt);
            }
        });

        btnWeigherClose.setText("关闭");
        btnWeigherClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeigherCloseActionPerformed(evt);
            }
        });

        btnSnap.setText("拍照");
        btnSnap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSnap1ActionPerformed(evt);
            }
        });

        tatInfo.setColumns(20);
        tatInfo.setRows(5);
        jScrollPane1.setViewportView(tatInfo);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblExpress, GroupLayout.PREFERRED_SIZE, 282, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblCarema, GroupLayout.PREFERRED_SIZE, 282, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lblManage, GroupLayout.PREFERRED_SIZE, 274, GroupLayout.PREFERRED_SIZE))
                                                .addGap(4, 4, 4)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(txtPicture, GroupLayout.PREFERRED_SIZE, 271, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(btnCaremaOpen, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(btnCaremaClose, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(cmbPrinterExpress, GroupLayout.PREFERRED_SIZE, 271, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(cmbPaperExpress, GroupLayout.PREFERRED_SIZE, 162, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(cmbPrinterManage, GroupLayout.PREFERRED_SIZE, 271, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(cmbPaperManage, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(btnPrintManage, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(btnPrintExpress, GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                                                        .addComponent(btnWeigh, GroupLayout.PREFERRED_SIZE, 103, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnSnap, GroupLayout.PREFERRED_SIZE, 103, GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblWeigher, GroupLayout.PREFERRED_SIZE, 282, GroupLayout.PREFERRED_SIZE)
                                                .addGap(4, 4, 4)
                                                .addComponent(cmbWeigher, GroupLayout.PREFERRED_SIZE, 271, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnWeigherOpen, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnWeigherClose, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblPictureReview, GroupLayout.PREFERRED_SIZE, 400, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1)))
                                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblManage, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbPrinterManage, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnPrintManage, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbPaperManage, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblExpress, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnPrintExpress, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbPaperExpress, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbPrinterExpress, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblCarema, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnCaremaOpen, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnCaremaClose, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnSnap, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPicture, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblWeigher, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbWeigher, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnWeigherOpen, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnWeigherClose, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnWeigh, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblPictureReview, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1))
                                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrintManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintManageActionPerformed
        String pt = cmbPrinterManage.getSelectedItem().toString();
        PrintService printer = printerMap.get(pt);

        String pg = cmbPaperManage.getSelectedItem().toString();
        printSampleLabel(printer, pg);

    }//GEN-LAST:event_btnPrintManageActionPerformed

    private void btnPrintExpressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintExpressActionPerformed
        String pt = cmbPrinterExpress.getSelectedItem().toString();
        PrintService printer = printerMap.get(pt);

        String pg = cmbPaperExpress.getSelectedItem().toString();
        printSampleLabel(printer, pg);

    }//GEN-LAST:event_btnPrintExpressActionPerformed

    private void btnSnap1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSnap1ActionPerformed
        println("拍照");
    }//GEN-LAST:event_btnSnap1ActionPerformed

    private void btnCaremaCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaremaCloseActionPerformed
        println("关闭摄像头");
        initCameraButton(true);
    }//GEN-LAST:event_btnCaremaCloseActionPerformed

    private void btnCaremaOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaremaOpenActionPerformed
        println("打开摄像头");
        initCameraButton(false);
    }//GEN-LAST:event_btnCaremaOpenActionPerformed

    private void btnWeigherOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeigherOpenActionPerformed
        String s = cmbWeigher.getSelectedItem().toString();
        println("打开电子秤：" + s);
    }//GEN-LAST:event_btnWeigherOpenActionPerformed

    private void btnWeigherCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeigherCloseActionPerformed
        String s = cmbWeigher.getSelectedItem().toString();
        println("关闭电子秤：" + s);

    }//GEN-LAST:event_btnWeigherCloseActionPerformed

    private void btnWeighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeighActionPerformed
        println("称重");
    }//GEN-LAST:event_btnWeighActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HardwareDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HardwareDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HardwareDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HardwareDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    WebLookAndFeel.install();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                HardwareDialog dialog = new HardwareDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnCaremaClose;
    private JButton btnCaremaOpen;
    private JButton btnPrintExpress;
    private JButton btnPrintManage;
    private JButton btnSnap;
    private JButton btnWeigh;
    private JButton btnWeigherClose;
    private JButton btnWeigherOpen;
    private JComboBox<String> cmbPaperExpress;
    private JComboBox<String> cmbPaperManage;
    private JComboBox<String> cmbPrinterExpress;
    private JComboBox<String> cmbPrinterManage;
    private JComboBox<String> cmbWeigher;
    private JScrollPane jScrollPane1;
    private JLabel lblCarema;
    private JLabel lblExpress;
    private JLabel lblManage;
    private JLabel lblPictureReview;
    private JLabel lblWeigher;
    private JTextArea tatInfo;
    private JTextField txtPicture;
    // End of variables declaration//GEN-END:variables

    private Map<String, PrintService> printerMap = new HashMap<>();

    private void initPrinters() {
        PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
        PrintService[] pts = PrintServiceLookup.lookupPrintServices(DocFlavor.INPUT_STREAM.AUTOSENSE, pras);
        println("共找到打印机数量：" + (pts == null ? 0 : pts.length));
        cmbPrinterManage.removeAllItems();
        cmbPrinterExpress.removeAllItems();
        if (pts != null) {
            int mIdx = 0, eIdx = 0;
            for (int i = 0; i < pts.length; i++) {
                String name = pts[i].getName();
                printerMap.put(name, pts[i]);
                cmbPrinterManage.addItem(name);
                cmbPrinterExpress.addItem(name);
                println(" - " + name);
                if (name.contains("DYMO")) {
                    mIdx = i;
                } else if (name.contains("ZDesigner")) {
                    eIdx = i;
                }
            }

            cmbPrinterManage.setSelectedIndex(mIdx);
            cmbPrinterExpress.setSelectedIndex(eIdx);
        }
    }

    private Map<String, String> sampleLabelPath = new HashMap<>();

    private void initLabelPage() {
        cmbPaperExpress.removeAllItems();
        String e4x6 = "4x6";
        cmbPaperExpress.addItem(e4x6);
        sampleLabelPath.put(e4x6, "/label/4x6.pdf");

        String e4x8 = "4x8";
        cmbPaperExpress.addItem(e4x8);
        sampleLabelPath.put(e4x8, "/label/4x8.pdf");

        cmbPaperManage.removeAllItems();
        String m4x2 = "4x2";
        cmbPaperManage.addItem(m4x2);
        sampleLabelPath.put(m4x2, "/label/4x2-25.pdf");
    }

    private void initWeigherPort() {
        cmbWeigher.removeAllItems();
        String[] pts = WeigherSdk.list();
        println("共找到串口数量：" + (pts == null ? 0 : pts.length));
        for (String pt : pts) {
            cmbWeigher.addItem(pt);
            println(" - " + pt);
        }
    }

    private void initWeigherButton(boolean off) {
        if (off) {
            btnWeigh.setEnabled(false);
        } else {
            btnWeigh.setBackground(online);
            btnWeigh.setEnabled(true);
        }
    }

    private void initCameraButton(boolean off) {
        if (off) {
            btnSnap.setEnabled(false);
        } else {
            btnSnap.setBackground(online);
            btnSnap.setEnabled(true);
        }

    }

    private void printSampleLabel(PrintService printer, String pdf) {
        println("打印样本：" + printer.getName() + "，" + pdf);
    }


    private Color online = new Color(121, 246, 58);


    private void println(String msg) {
        tatInfo.append(msg);
        tatInfo.append("\n");
    }

}
